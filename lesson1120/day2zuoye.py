# 有元组 T1=(‘ python ’,’java ’,'web编程 ’,’机器学习 ’,’ 图像处理 ’,’ 数据结构 ’,’ java ’,’ 人工智能 ’) ，编写代码实现下面功能：
# （ 1 ）向元组添加元素‘操作系统’，是否成功
# （ 2 ）分别用 for 、 while 语句，遍历输出元组元素
# （ 3 ）统计‘java’在元组中出现的次数
# （ 4 ）查找‘数据结构’在元组中的位置
# （ 5 ）把元组转换成列表 L1
# （ 6 ）把元组转换成字符串 S
# （ 7 ）有元组 T2=(‘ 大数据 ’,’ 计科 ’,’ 软工 ’，’网工‘) ，连接元组 T1 和 T2 生成新元组 T3


# # 生成一个包含数字1,2,3,…,99的列表，输入一个2~9之间的正整数，
# # 条件1:列表中元素是这个数的倍数
# # 条件2:列表中元素的个位或十位上等于这个数字，
# # 满足任意条件 则将这个元素添加到新的列表中 最后打印新的列表
# # 例如，输入"7"，找出列表中7的倍数和数位上包含7的数，添加到新列表,再输出新列表。 提示:想拿到一个数的个位或十位是什么 会用到取模运算和除法运算
#
# # 第一步生成1-99的列表 这里用到了两点 第一点 循环1-99  第二点 往列表添加元素
# lt = []
# for i in range(1, 100):
#     lt.append(i)
# # 第二步输入一个2~9之间的正整数 input()函数和int()函数 使用input()获取输入的内容 再使用int()将输入的内容转换为数字
# num = int(input("输入2-9之间的正数"))
# if num < 2 or num > 9:
#     raise Exception("输入的数字不合法！！！！！！！")
# # 第三步 找出满足条件的元素放入新列表 并打印出来
# # 这一步需要先声明一个新列表 然后循环之前生成的1-99的那个列表 判断里面的每个元素是否满足条件 满足条件就把元素添加到新列表中
# # 需要思考 怎么判断一个数字是否为另一个数字的倍数  怎么判断一个数字的十位数是否等于另一个数字 怎么判断一个数字的个位数是否等于另一个数字
# result = []
# for item in lt:
#     # 下面这一行的三个条件的意思分别是 列表中的元素是输入的数的倍数 或 列表中的元素的十位等于输入的数 或 列表中的元素的个位等于输入的数
#     if item % num == 0 or int(item / 10) == num or item % 10 == num:
#         result.append(item)
# print(result)


# # # 有如下字典：
# # # userDict = {‘admin’:‘123456’,‘administrator’:‘12345678’,‘root’:‘password’}，
# # # 其键和值分别代表用户名与密码，请编程实现用户登录验证。用户输入用户名和密码，当用户名与密码和字典中中的某个键值对匹配时，显示”登录成功“，否则显示”登录失败“，登陆失败时允许重复输入三次
# userDict = {'admin': '123456', 'adminstrator': '12345678', 'root': 'passward'}
# i = 0
# while i < 3:
#     user = input("用户名：")
#     i += 1
#     if user not in userDict:
#         print('用户不存在，还有%d次登录机会' % (3 - i))
#         continue
#     else:
#         passwd = input("密码:")
#         s = userDict.get(user)
#         if passwd != s:
#             print('登录失败，还有%d次登录机会' % (3 - i))
#         else:
#             print("登录成功")
#             break

# userDict = {'admin': '123456', 'adminstrator': '12345678', 'root': 'passward'}
# i = 0
# while i < 3:
#     user = input("用户名：")
#     passwd = input("密码:")
#     i += 1
#     if passwd != userDict.get(user):
#         print('用户不存在或密码错误，还有%d次登录机会' % (3 - i))
#     else:
#         print("登录成功")
#         break

# # 有两个整数a,b， a,b的取值范围在0-9之间，给出所有符合a+b=12的组合 (考的是两层嵌套循环)
# for a in range(10):
#     for b in range(10):
#         if a + b == 12:
#             print("满足条件 a == " + str(a) + ",b == " + str(b))


# # A、B、C、D分别为0-9之间的整数，求出满足AB+CD=DA条件的数。    例如：90+09=99  (考的是多层嵌套循环,这个难点,思考不出来先百度,晚上做题时不会给提示)
# for a in range(10):
#     for b in range(10):
#         for c in range(10):
#             for d in range(10):
#                 # a * 10 + b 就是ab
#                 # c * 10 + d 就是cd
#                 # d * 10 + a 就是da
#                 if (a * 10 + b) + (c * 10 + d) == (d * 10 + a):
#                     print("满足条件 a == " + str(a) + ",b == " + str(b) + ",c == " + str(c) + ",d == " + str(d))

# T1 = ('1', '2', '3')  # 声明元组T1
#
# L1 = list(T1)  # 将元组T1转换为列表L1
# print(L1)  # 打印列表
# print(T1)  # 打印元组
#
# aa = [11, 22, 3344, 455]

# python=95
# english=92
# c=89
# sub=python - c
# avg=(python + english + c)/3
# print("Python课程和C语言课程的分数之差："+str(sub)+"分\n")
# print("3门课的平均分："+str(avg)+"分")


# # 生成一个包含数字1,2,3,…,99的列表，输入一个2~9之间的正整数，
# # 条件1:列表中元素是这个数的倍数
# # 条件2:列表中元素的个位或十位上等于这个数字，
# # 满足任意条件 则将这个元素添加到新的列表中 最后打印新的列表
# # 例如，输入"7"，找出列表中7的倍数和数位上包含7的数，添加到新列表,再输出新列表。 提示:想拿到一个数的个位或十位是什么 会用到取模运算和除法运算

# 创建一个列表 列表内的元素是大于0小于100的所有正整数  然后输入一个大于等于2 小于等于9的正整数  现在有下面的几个条件
# 条件1:列表中元素是输入的数的倍数
# 条件2:列表中元素的个位或十位上等于输入的数
# 满足以上任意条件 则将这个元素添加到新的列表中 最后打印新的列表
# 给你举个例子：输入"3"，找出列表中3的倍数和数位上包含3的数，添加到新列表,再输出新列表。 新列表中应该会有3,6,9,12,13,15....等
# 提示:想想怎么拿到一个数的个位或十位是什么
str1='12345'
zh = ['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月']
yue = int(input("输入月份"))
if yue < 1 or yue > 12:
    print("输入非法")
else:
    print('当前月份' + zh[yue + 1])